# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: nfsteste
#   namespace: default
# spec:
#   accessModes:
#     - ReadWriteMany
#   storageClassName: ""
#   selector:
#     matchLabels:
#       pv: nfsteste
#   resources:
#     requests:
#       storage: 20Mi

# ---


apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etl1-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 80Mi

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: etl
  namespace: default
  labels:
    allow.http: "false"
    application: etl
spec:
  replicas: 1
  strategy:
    type: Recreate  
  selector:
    matchLabels:
      application: etl
  template:
    metadata:
      labels:
        application: etl
    spec:
      imagePullSecrets:
       - name: pipeline-docker-registry
      containers:
      - name: etl
        image: ${CICD_IMAGE}:${CICD_EXECUTION_SEQUENCE}
        # imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "100Mi"
            cpu: "100m"
        ports:
        - containerPort: 80
        - containerPort: 22
        securityContext:
          privileged: true
        volumeMounts:
          - name:  etl-volume
            mountPath:  /code
      volumes:
      - name: etl-volume
        persistentVolumeClaim:
          claimName: etl1-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: etl
  namespace: default
spec:
  selector:
    application: etl
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP

---

kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: etl  
  namespace: default
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http
    traefik.ingress.kubernetes.io/redirect-entry-point: http
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/router.tls.certresolver: default
    # traefik.ingress.kubernetes.io/router.tls.certresolver: default
    # traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/preserve-host: "true"
    # traefik.ingress.kubernetes.io/redirect-permanent: "true"
    # traefik.ingress.kubernetes.io/redirect-regex: ^http://www.capacitacao.seict.ac.gov.br/(.*)
    # traefik.ingress.kubernetes.io/redirect-replacement: http://capacitacao.seict.ac.gov.br/$1
spec:
  rules:
    - host: 'etl.ac.gov.br'
      http:
        paths:
          - backend:
              serviceName: etl
              servicePort: 80      
  # tls:
  #   - hosts:
  #     - 'etl.ac.gov.br'

